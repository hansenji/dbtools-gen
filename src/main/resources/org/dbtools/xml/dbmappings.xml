<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--<!DOCTYPE dbmappings SYSTEM "dbmappings.dtd">-->
<!--
 * Copyright 2006 Jeff Campbell. All rights reserved. Unauthorized reproduction 
 * is a violation of applicable law. This material contains certain 
 * confidential or proprietary information and trade secrets of Jeff Campbell.
-->

<dbmappings>
    <type-mapping>
        <name>InterBase</name>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>NUMERIC(18,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>BLOB SUB_TYPE TEXT SEGMENT SIZE 100 CHARACTER SET ASCII</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Firebird</name>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>NUMERIC(18,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>BLOB SUB_TYPE TEXT SEGMENT SIZE 100 CHARACTER SET ASCII</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>DB2</name>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <!--  DB2 does not appear to support columns of type "byte"
              Regrettably, this means they'll be serialized.
                    <mapping>
                        <java-type>java.lang.Byte</java-type>
                        <jdbc-type>CHAR</jdbc-type>
                        <sql-type>CHAR(1) FOR BIT DATA</sql-type>
                    </mapping>
        -->
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(254)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BLOB(2000)</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Oracle</name>
        <!-- Oracle 9, 10, 11+ -->
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>NUMBER(1)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>NUMBER(1)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>NUMERIC</jdbc-type>
            <sql-type>NUMBER(3)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>NUMERIC</jdbc-type>
            <sql-type>NUMBER(5)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>NUMBER(10)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>NUMBER(19)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>NUMBER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>NUMBER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.math.BigDecimal</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>NUMBER(38,15)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>NUMBER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>NUMBER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR2</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>CLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Sybase</name>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <!-- Current Sybase JDBC drivers (jConnect 5.2) don't support
             byte or short.  Unfortunately they'll be serialized.
                    <mapping>
                        <java-type>java.lang.Byte</java-type>
                        <jdbc-type>TINYINT</jdbc-type>
                        <sql-type>TINYINT</sql-type>
                    </mapping>
                    <mapping>
                        <java-type>java.lang.Short</java-type>
                        <jdbc-type>SMALLINT</jdbc-type>
                        <sql-type>SMALLINT</sql-type>
                    </mapping>
        -->
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>NUMERIC</jdbc-type>
            <sql-type>NUMERIC(38,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(255)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>SMALLDATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>IMAGE</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>PostgreSQL</name>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>INT2</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>INT2</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>INT2</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR(1)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BYTEA</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>BLOB</jdbc-type>
            <sql-type>BYTEA</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>InstantDB</name>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(256)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(5)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>SMALLCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>LONG</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>HSQLDB</name>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>OBJECT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR_IGNORECASE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONGVARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>iAnywhere</name>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>OBJECT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONG VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>NUMERIC</jdbc-type>
            <sql-type>NUMERIC</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Derby</name>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
            <!-- Future Boolean type may be added -->
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>SMALLINT</sql-type>
            <!-- Future Boolean type may be added -->
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>OBJECT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONG VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Sqlite</name>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>INTEGER</sql-type>
            <!-- Future Boolean type may be added -->
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>INTEGER</sql-type>
            <!-- Future Boolean type may be added -->
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>BLOB</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>PointBase</name>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(256)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>BLOB</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>mySQL</name>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DECIMAL(40, 20)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BOOLEAN</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>BLOB</jdbc-type>
            <sql-type>BLOB</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DECIMAL(30,6)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONGTEXT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>BIGINT</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>MS SQLSERVER</name>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>DECIMAL(20)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.math.BigDecimal</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(256)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(256)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>IMAGE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>DATETIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>BIT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>SapDB</name>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(256)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>LONG BYTE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>CHAR BYTE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>FIXED(1,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>FLOAT</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>DECIMAL(20)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>Cloudscape</name>
        <mapping>
            <java-type>java.math.BigDecimal</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONG VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>BOOLEAN</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>TINYINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>LONGINT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>REAL</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DECIMAL</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <sql-type>LONG VARCHAR</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>TIMESTAMP</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>LONG VARBINARY</sql-type>
        </mapping>
    </type-mapping>

    <type-mapping>
        <name>InformixDB</name>
        <mapping>
            <java-type>java.lang.Character</java-type>
            <jdbc-type>CHAR</jdbc-type>
            <sql-type>CHAR(1)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.String</java-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <sql-type>VARCHAR(255,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.math.BigDecimal</java-type>
            <jdbc-type>NUMERIC</jdbc-type>
            <sql-type>DECIMAL</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Boolean</java-type>
            <jdbc-type>BIT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Integer</java-type>
            <jdbc-type>INTEGER</jdbc-type>
            <sql-type>INTEGER</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Long</java-type>
            <jdbc-type>BIGINT</jdbc-type>
            <sql-type>NUMERIC(18,0)</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Money</java-type>
            <jdbc-type>MONEY</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Float</java-type>
            <jdbc-type>REAL</jdbc-type>
            <sql-type>FLOAT</sql-type>
        </mapping>
        <mapping>
            <java-type>com.jdc.datatypes.Fraction</java-type>
            <jdbc-type>FRACTION</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Double</java-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <sql-type>DOUBLE PRECISION</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Byte</java-type>
            <jdbc-type>TINYINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Short</java-type>
            <jdbc-type>SMALLINT</jdbc-type>
            <sql-type>SMALLINT</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATETIME</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.sql.Date</java-type>
            <jdbc-type>DATE</jdbc-type>
            <sql-type>DATE</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIME</jdbc-type>
            <sql-type>TIME</sql-type>
        </mapping>
        <mapping>
            <java-type>java.util.Date</java-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <sql-type>DATETIME YEAR TO FRACTION(3)</sql-type>
        </mapping>
        <mapping>
            <java-type>java.lang.Object</java-type>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <sql-type>BYTE</sql-type>
        </mapping>
    </type-mapping>
</dbmappings>
